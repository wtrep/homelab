---
- name: Create .containers directory
  ansible.builtin.file:
    path: '{{ containers_folder }}'
    state: directory
    mode: '0755'

- name: Create the mediaserver group
  ansible.builtin.group:
    name: mediaserver
  register: mediaservergroup
  become: true

- name: Create a group for each service
  ansible.builtin.group:
    name: '{{ item }}'
  become: true
  loop: '{{ services.keys() }}'

- name: Create a user for each service
  ansible.builtin.user:
    name: '{{ item }}'
    group: '{{ item }}'
    system: true
  register: users
  become: true
  loop: '{{ services.keys() }}'

- name: Add relevant users to the mediaserver group
  ansible.builtin.user:
    name: '{{ item }}'
    groups: mediaserver
    append: yes
  become: true
  loop: '{{ services | services_with_media_access + ["{{ username }}"] }}'

- name: Add relevant users to the dialout group
  ansible.builtin.user:
    name: '{{ item }}'
    groups: dialout
    append: yes
  become: true
  loop: '{{ services | services_with_device_access + ["{{ username }}"] }}'

- name: Setting users fact
  set_fact: users='{{ users | parse_uid_and_gid }}'

- name: Create appdata directories
  ansible.builtin.file:
    path: '{{ docker_persistent_folder }}/{{ item }}'
    state: directory
    owner: '{{ item }}'
    group: '{{ item }}'
    recurse: yes
  become: true
  loop: '{{ services | services_with_persistent_data }}'

- name: Copy templated docker-compose file
  ansible.builtin.template:
    src: templates/docker-compose.yaml.j2
    dest: '{{ containers_folder }}/docker-compose.yaml'
    mode: '0600'
    lstrip_blocks: true

- name: Copy templated config files
  ansible.builtin.template:
    src: 'templates/{{ item.file }}.j2'
    dest: '{{ docker_persistent_folder }}/{{ item.service }}/{{ item.file }}'
    mode: '0600'
    lstrip_blocks: true
    owner: '{{ item.service }}'
    group: '{{ item.service }}'
  become: true
  loop:
    - { file: 'traefik.yaml', service: 'traefik' }
    - { file: 'prometheus.yml', service: 'prometheus' }
    - { file: 'up.conf', service: 'unpoller' }
    - { file: 'snmp.yml', service: 'snmp-exporter' }
    - { file: 'up.conf', service: 'unpoller' }

- name: Copy config files
  ansible.builtin.copy:
    src: '{{ item.file }}'
    dest: '{{ docker_persistent_folder }}/{{ item.service }}/{{ item.file }}'
    mode: '0600'
    owner: '{{ item.service }}'
    group: '{{ item.service }}'
  become: true
  loop:
    - { file: 'default-counters.csv', service: 'dcgm-exporter' }

- name: Copy config directories
  ansible.builtin.copy:
    src: '{{ item.directory }}'
    dest: '{{ docker_persistent_folder }}/{{ item.directory }}'
    mode: '0644'
    owner: '{{ item.service }}'
    group: '{{ item.service }}'
  become: true
  loop:
    - { directory: 'openvpn', service: 'deluge' }

- name: Start all services
  community.docker.docker_compose:
    project_src: '{{ containers_folder }}'
    pull: yes
    remove_orphans: yes
...