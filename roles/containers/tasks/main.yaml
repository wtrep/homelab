---
- name: Create .containers directory
  ansible.builtin.file:
    path: '{{ containers_folder }}'
    state: directory
    mode: '0755'

- name: Create the mediaserver group
  ansible.builtin.group:
    name: mediaserver
  become: true

- name: Create a group for each service
  ansible.builtin.group:
    name: '{{ item }}'
  become: true
  loop: '{{ services.keys() }}'

- name: Create a user for each service
  ansible.builtin.user:
    name: '{{ item }}'
    group: '{{ item }}'
    system: true
  register: users
  become: true
  loop: '{{ services.keys() }}'

- name: Add relevant users to the mediaserver group
  ansible.builtin.user:
    name: '{{ item }}'
    groups: mediaserver
    append: yes
  become: true
  loop: '{{ services | services_with_media_access }}'

- name: Add relevant users to the dialout group
  ansible.builtin.user:
    name: '{{ item }}'
    groups: dialout
    append: yes
  become: true
  loop: '{{ services | services_with_device_access }}'

- name: Setting users fact
  set_fact: users='{{ users | parse_uid_and_gid }}'

- name: Debug
  debug:
    msg: "{{ users }}"

- name: Create appdata directories
  ansible.builtin.file:
    path: '{{ docker_persistant_folder }}/{{ item }}'
    state: directory
    owner: '{{ item }}'
    group: '{{ item }}'
    recurse: yes
  become: true
  loop: '{{ services | services_with_persistent_data }}'

- name: Copy templated docker-compose file
  ansible.builtin.template:
    src: templates/docker-compose.yaml.j2
    dest: '{{ containers_folder }}/docker-compose.yaml'
    mode: '0600'
    lstrip_blocks: true

- name: Copy templated traefik config file
  ansible.builtin.template:
    src: templates/traefik.yaml.j2
    dest: '{{ docker_persistant_folder }}/traefik/traefik.yaml'
    mode: '0600'
    lstrip_blocks: true
  become: true

- name: Copy templated Prometheus config file
  ansible.builtin.template:
    src: templates/prometheus.yaml.j2
    dest: '{{ docker_persistant_folder }}/prometheus/prometheus.yml'
    mode: '0600'
    lstrip_blocks: true
  become: true

- name: Copy templated Unpoller config file
  ansible.builtin.template:
    src: templates/unpoller.conf.j2
    dest: '{{ docker_persistant_folder }}/unpoller/up.conf'
    mode: '0600'
    lstrip_blocks: true
  become: true

- name: Copy templated snmp-exporter config file
  ansible.builtin.template:
    src: templates/snmp.yaml.j2
    dest: '{{ docker_persistant_folder }}/snmp-exporter/snmp.yml'
    mode: '0600'
    lstrip_blocks: true
    owner: snmp-exporter
    group: snmp-exporter
  become: true

- name: Start all services
  community.docker.docker_compose:
    project_src: '{{ containers_folder }}'
    pull: yes
    restarted: yes
    remove_orphans: yes
...