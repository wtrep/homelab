---
version: "3.9"

services:
  traefik:
    image: traefik
    container_name: traefik
    volumes:
      - /opt/appdata/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
      - 8443:8443
      - 9000:9000
    environment:
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cloudflare_api_token
    restart: unless-stopped
    secrets:
      - cloudflare_api_token

  unifi:
    image: linuxserver/unifi-controller
    container_name: unifi
    depends_on:
      - traefik
    volumes:
      - /opt/appdata/unifi:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.unifi.rule=Host(`unifi.trep.cloud`)
      - traefik.http.routers.unifi.entrypoints=unifi
      - traefik.http.routers.unifi.tls=true
      - traefik.http.routers.unifi.tls.certresolver=cloudflare
      - traefik.http.routers.unifi-http.rule=Host(`unifi.trep.cloud`)
      - traefik.http.routers.unifi-http.entrypoints=unifi
      - traefik.http.routers.unifi-http.middlewares=unifi-http-redirect@docker
      - traefik.http.middlewares.unifi-http-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.unifi-http-redirect.redirectscheme.permanent=true
      - traefik.http.services.unifi.loadbalancer.server.scheme=https
      - traefik.http.services.unifi.loadbalancer.server.port=8443
    ports:
      - 8080:8080
      - 3478:3478/udp
    environment:
      - PUID=1313
      - PGID=1313
      - TZ=America/Toronto
    restart: unless-stopped

secrets:
  cloudflare_api_token:
    external: true